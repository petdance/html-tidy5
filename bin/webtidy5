#!/usr/bin/perl

use 5.010001;
use warnings;
use strict;

use Getopt::Long;
use HTML::Tidy5;

my $help;
my $context;

my $tidy = HTML::Tidy5->new;

GetOptions(
    'help|version'  => \$help,
    'context:i'     => \$context,
    'noerrors'      => sub { $tidy->ignore( type => [ TIDY_ERROR ] ) },
    'nowarnings'    => sub { $tidy->ignore( type => [ TIDY_WARNING ] ) },
) or $help = 1;

if ( !@ARGV || $help ) {
    print "webtidy v$HTML::Tidy5::VERSION using tidy v" . HTML::Tidy5::tidy_library_version() . "\n";
    print <DATA>;
    exit 1;
}


for my $url ( @ARGV ) {
    my @lines;
    if ( $url =~ /^https?:/ ) {
        if ( !eval { require LWP::Simple; 1; } ) {
            warn q{Can't retrieve URLs without LWP::Simple installed};
            next;
        }

        my $content = LWP::Simple::get( $url );
        if ( $content ) {
            @lines = split( /\n/, $content );
            $_ = "$_\n" for @lines;
        } else {
            warn "Unable to fetch $url\n";
            next;
        }
    } else {
        open( my $fh, '<', $url ) or die "Can't open $url: $!";
        @lines = <$fh>;
        close $fh or die $!;
    }

    $tidy->parse( $url, @lines );
    for my $message ( $tidy->messages ) {
        print $message->as_string(), "\n";
        if ( defined $context ) {
            $context += 0;
            my $lineno = $message->line - 1;

            my $start = $lineno-$context;
            $start = 0 if $start < 0;

            my $end = $lineno+$context;
            $end = $#lines if $end > $#lines;

            for my $i ( $start..$end ) {
                printf( '%5d: %s', $i+1, $lines[$i] );
            }
            print "\n";
        }
    }
    $tidy->clear_messages();
} # for files

__END__
Usage: webtidy [filename or url]... (filename - reads STDIN)
    --context[=n]   Show the offending line (and n surrounding lines)
    --noerrors      Ignore errors
    --nowarnings    Ignore warnings

    --help          This message

webtidy is free software.  You may modify or distribute it under the
terms of the Artistic License v2.0.
